AWSTemplateFormatVersion: "2010-09-09"
Description: APP creation and configuration

Parameters:
    RdsAddress: 
      Type: String
    RdsPort:
      Type: String
    BucketName: 
      Type: String
    AccessKeyID: 
      Type: String
      NoEcho: true
    SecretAccessKey: 
      Type: String
      NoEcho: true
    DirectusUsername:
      Type: String
    DirectusPassword:
      Type: String
      NoEcho: true
    DirectusDatabaseName:
      Type: String
    DirectusClient:
      Type: String
    DirectusKey:
      Type: String
      NoEcho: true
    DirectusSecret:
      Type: String
      NoEcho: true
    AdminEmail:
      Type: String
      NoEcho: true
    AdminPassword:
      Type: String
      NoEcho: true

Resources:
  AppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: For ssh on port 22 access and 8080 port access for App
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: "8080"
          ToPort: "8080"
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: "443"
          ToPort: "443"
          CidrIp: 0.0.0.0/0

  AppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: app-ec2-instance-profile
      Path: /
      Roles: 
       - !Ref AppEc2InstanceRole

  AppEc2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: app-ec2-instance-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  App:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0333305f9719618c7
      KeyName: Directus
      SecurityGroups:
        - !Ref AppSG
      IamInstanceProfile: !Ref AppInstanceProfile
      UserData: 
        Fn::Base64: !Sub
           | 
            Content-Type: multipart/mixed; boundary="//"
            MIME-Version: 1.0

            --//
            Content-Type: text/cloud-config; charset="us-ascii"
            MIME-Version: 1.0
            Content-Transfer-Encoding: 7bit
            Content-Disposition: attachment; filename="cloud-config.txt"

            #cloud-config
            cloud_final_modules:
            - [scripts-user, always]

            --//
            Content-Type: text/x-shellscript; charset="us-ascii"
            MIME-Version: 1.0
            Content-Transfer-Encoding: 7bit
            Content-Disposition: attachment; filename="userdata.txt"

            #!/bin/bash
            
            # Set ENV
            echo '
            export DIRECTUS_DATABASE_CLIENT=${DirectusClient} \n
            export DIRECTUS_DATABASE_PORT=${RdsPort} \n
            export DIRECTUS_DATABASE_HOST=${RdsAddress} \n
            export DIRECTUS_DATABASE_USERNAME=${DirectusUsername} \n
            export DIRECTUS_DATABASE_PASSWORD=${DirectusPassword} \n
            export DIRECTUS_KEY=${DirectusKey} \n
            export DIRECTUS_SECRET=${DirectusSecret} \n
            export ADMIN_EMAIL=${AdminEmail} \n
            export ADMIN_PASSWORD=${AdminPassword} \n
            export DIRECTUS_DATABASE_NAME=${DirectusDatabaseName} \n
            export STORAGE_S3_KEY=${AccessKeyID} \n
            export STORAGE_S3_SECRET=${SecretAccessKey} \n
            export STORAGE_S3_BUCKET=${BucketName} \n
            export STORAGE_LOCATIONS=s3 \n
            export STORAGE_S3_DRIVER=s3 \n
            export STORAGE_S3_REGION=eu-west-1 \n
            export PORT=8080
            ' | sudo tee /etc/profile.d/myVar.sh

            # Install docker and docker-compose
            sudo apt-get update
            sudo apt-get install \
                ca-certificates \
                curl \
                gnupg \
                lsb-release
            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            sudo apt-get update

            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

            # Clone and run a sample application
            echo 'Get git project'
            mkdir projects
            cd projects/
            git clone https://github.com/francoislongatte/Directus.git
            cd Directus

            chown -R 1000:1000 ~/extensions

            # Launch App
            docker-compose --file /projects/Directus/docker-compose.yaml up
            --//--

Outputs:
  PublicIp:
    Value: !GetAtt App.PublicIp